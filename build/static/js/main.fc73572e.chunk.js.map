{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAGaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UAEI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJbC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAU,YAAf,SAEMD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAE1B,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,UCNhBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAErB,uBAAOC,KAAK,SACJb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCmCPG,E,kDApCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALJ,E,gEAUO,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKC,SAAS,CAACf,SAAUc,S,+BAGpC,IAAD,SACwBE,KAAKR,MAA7BR,EADA,EACAA,SAASS,EADT,EACSA,YAEXQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAEpG,OACE,sBAAK3B,UAAU,MAAf,UACI,kDACF,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAe,SAAAiB,GAAC,OAAG,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAE1D,cAAC,EAAD,CAAUvB,SAAUiB,W,GA9BRO,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc73572e.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../card/card.styles.css'\r\n\r\nexport const Card = (props) =>(\r\n    <div className='card-container'>\r\n\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n\r\n    </div>\r\n);","import React from 'react';\r\nimport '../card-list/card-list.style.css'\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = (props) =>(\r\n    <div className='card-list'>\r\n       {\r\n          props.monsters.map(monster =>(\r\n\r\n          <Card key={monster.id} monster= {monster}/>))\r\n        }\r\n    </div>\r\n)\r\n","import React from 'react';\r\nimport '../search-box/search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n  \r\n    <input type='search' \r\n            className='search' \r\n            placeholder={placeholder} \r\n            onChange={handleChange}\r\n    />\r\n  \r\n)","import React from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n     \n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response =>response.json())\n      .then(users => {this.setState({monsters: users})});\n  }\n\n  render(){\n  const  {monsters,searchField} = this.state;\n\n  const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n  return (\n    <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n      <SearchBox\n        placeholder='Serch Monsters'\n        handleChange= {e=> this.setState({searchField: e.target.value}) }\n      />\n      <CardList monsters={filteredMonsters }/>      \n     \n\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}